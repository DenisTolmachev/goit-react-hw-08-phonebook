{"version":3,"file":"static/js/399.69295d66.chunk.js","mappings":"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","sources":["components/common/Button.styled.js","components/common/Form.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.style.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 10px 10px;\n  margin: 5px 10px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  text-transform: capitalize;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 5px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  cursor: pointer;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const FormTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const FormStyled = styled(Form)`\n  max-width: 500px;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  margin-bottom: 10px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.secondary};\n  height: 22px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 3px;\n  border: 1px solid transparent;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  &.error {\n    border-color: ${({ theme }) => theme.colors.error};\n  }\n`;\n\nexport const InputFeedback = styled.div`\n  color: ${({ theme }) => theme.colors.error};\n  margin-top: -15px;\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\n\nexport const ChangeForm = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.m1};\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport const ChangeLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n","import { Button } from 'components/common/Button.styled';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormTitle,\n  Input,\n  InputFeedback,\n  Label,\n  FormStyled,\n  ChangeForm,\n  ChangeLink\n} from '../common/Form.styled';\n\nconst mySchema = yup.object().shape({\n  email: yup.string().email().required('No email provided.'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n});\n\nexport const RegisterForm = () => (\n  <>\n    <FormTitle>Create Account</FormTitle>\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={mySchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          console.log('Logging in', values);\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n\n        return (\n          <FormStyled onSubmit={handleSubmit}>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.name && touched.name && 'error'}\n            />\n            {errors.name && touched.name && (\n              <InputFeedback>{errors.name}</InputFeedback>\n            )}\n\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"Enter your email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.email && touched.email && 'error'}\n            />\n            {errors.email && touched.email && (\n              <InputFeedback>{errors.email}</InputFeedback>\n            )}\n\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.password && touched.password && 'error'}\n            />\n            {errors.password && touched.password && (\n              <InputFeedback>{errors.password}</InputFeedback>\n            )}\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              SignUp\n            </Button>\n          </FormStyled>\n        );\n      }}\n    </Formik>\n    <ChangeForm>Already have account? <ChangeLink to=\"/login\">Login</ChangeLink></ChangeForm>\n  </>\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 50px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm'\nimport { Container } from \"./RegisterPage.style\";\n\nconst Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  )\n};\n\nexport default Register;\n"],"names":["Button","styled","theme","fontSizes","m","colors","primary","white","secondary","FormTitle","FormStyled","Form","Label","fontWeights","bold","Input","Field","error","InputFeedback","ChangeForm","m1","ChangeLink","Link","mySchema","yup","shape","email","required","password","min","matches","RegisterForm","initialValues","name","validationSchema","onSubmit","values","setSubmitting","setTimeout","console","log","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","id","type","placeholder","value","onChange","onBlur","className","disabled","to","Container"],"sourceRoot":""}