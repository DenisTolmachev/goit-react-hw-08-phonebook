{"version":3,"file":"static/js/399.1645310d.chunk.js","mappings":"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","sources":["components/common/Form.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.style.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const FormTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const FormStyled = styled(Form)`\n  max-width: 500px;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  margin-bottom: 10px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.secondary};\n  height: 22px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 3px;\n  border: 1px solid transparent;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  &.error {\n    border-color: ${({ theme }) => theme.colors.error};\n  }\n`;\n\nexport const InputFeedback = styled.div`\n  color: ${({ theme }) => theme.colors.error};\n  margin-top: -15px;\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\n\nexport const ChangeForm = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.m1};\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport const ChangeLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n","import { Button } from 'components/common/Button.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { registerUser } from 'store/auth/authOperations';\nimport * as yup from 'yup';\nimport {\n  FormTitle,\n  Input,\n  InputFeedback,\n  Label,\n  FormStyled,\n  ChangeForm,\n  ChangeLink,\n} from '../common/Form.styled';\n\nconst nameRegex = RegExp(\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n);\n\nconst mySchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2)\n    .matches(\n      nameRegex,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('No name provided.'),\n  email: yup.string().email().required('No email provided.'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(registerUser(user));\n    <Navigate to=\"contacts\" replace={true} />;\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormTitle>Create Account</FormTitle>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={mySchema}\n        onSubmit={handleSubmit}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n          } = props;\n\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.name && touched.name && 'error'}\n              />\n              {errors.name && touched.name && (\n                <InputFeedback>{errors.name}</InputFeedback>\n              )}\n\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.email && touched.email && 'error'}\n              />\n              {errors.email && touched.email && (\n                <InputFeedback>{errors.email}</InputFeedback>\n              )}\n\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.password && touched.password && 'error'}\n              />\n              {errors.password && touched.password && (\n                <InputFeedback>{errors.password}</InputFeedback>\n              )}\n\n              <Button type=\"submit\" disabled={isSubmitting}>\n                SignUp\n              </Button>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n      <ChangeForm>\n        Already have account? <ChangeLink to=\"/login\">Login</ChangeLink>\n      </ChangeForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 50px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm'\nimport { Container } from \"./RegisterPage.style\";\n\nconst Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  )\n};\n\nexport default Register;\n"],"names":["FormTitle","styled","FormStyled","Form","Label","theme","fontWeights","bold","colors","secondary","Input","Field","error","InputFeedback","ChangeForm","fontSizes","m1","ChangeLink","Link","nameRegex","RegExp","mySchema","yup","shape","name","min","matches","required","email","password","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","user","registerUser","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","id","type","placeholder","value","onChange","onBlur","className","disabled","to","Container"],"sourceRoot":""}