{"version":3,"file":"static/js/644.43c1bee3.chunk.js","mappings":"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","sources":["components/common/Button.styled.js","components/common/Form.styled.js","services/usersAPI.js","store/auth/authOperations.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.style.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 10px 10px;\n  margin: 5px 10px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  text-transform: capitalize;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 5px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  cursor: pointer;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const FormTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const FormStyled = styled(Form)`\n  max-width: 500px;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  margin-bottom: 10px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.secondary};\n  height: 22px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 3px;\n  border: 1px solid transparent;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  &.error {\n    border-color: ${({ theme }) => theme.colors.error};\n  }\n`;\n\nexport const InputFeedback = styled.div`\n  color: ${({ theme }) => theme.colors.error};\n  margin-top: -15px;\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\n\nexport const ChangeForm = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.m1};\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport const ChangeLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n","import axios from \"axios\";\nimport { BASE_URL } from \"constants/constants\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const token = {\n    set(token) {\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n      axios.defaults.headers.common.Authorization = '';\n    }\n  };\n\n  export const register = async user => {\n    return await axios.post(`/users/signup`, user).then(response => response.data);\n  }\n\n  export const login = async user => {\n    return await axios.post(`/users/login`, user).then(response => response.data);\n  }\n\n  export const logout = async () => {\n    return await axios.post(`/users/logout`).then(response => response.data);\n  }\n\n  export const userData = async () => {\n    return await axios.get(`/users/current`).then(response => response.data);\n  }","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as API from 'services/usersAPI';\nimport { toast } from 'react-toastify';\n\nexport const registerUser = createAsyncThunk(\n  'auth/registerUser',\n  async user => {\n    try {\n      const data = await API.register(user);\n      API.token.set(data.token);\n      return data;\n    } catch (error) {\n      return toast.error(error);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk('auth/loginUser', async user => {\n  try {\n    const data = await API.login(user);\n    API.token.set(data.token);\n    return data;\n  } catch (error) {\n    return toast.error(error);\n  }\n});\n\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async () => {\n  try {\n    await API.logout();\n    API.token.unset();\n  } catch (error) {\n    return toast.error(error);\n  }\n});\n\nexport const getUserData = createAsyncThunk(\n  'auth/userData',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      toast.warn('You are not logged in');\n    }\n    API.token.set(persistedToken);\n    try {\n      const data = await API.userData();\n      return data;\n    } catch (error) {\n      return toast.error(error);\n    }\n  }\n);\n","import { Button } from 'components/common/Button.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { registerUser } from 'store/auth/authOperations';\nimport * as yup from 'yup';\nimport {\n  FormTitle,\n  Input,\n  InputFeedback,\n  Label,\n  FormStyled,\n  ChangeForm,\n  ChangeLink,\n} from '../common/Form.styled';\n\nconst nameRegex = RegExp(\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n);\n\nconst mySchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2)\n    .matches(\n      nameRegex,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('No name provided.'),\n  email: yup.string().email().required('No email provided.'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(registerUser(user));\n    <Navigate to=\"contacts\" replace={true} />;\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormTitle>Create Account</FormTitle>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={mySchema}\n        onSubmit={handleSubmit}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n          } = props;\n\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.name && touched.name && 'error'}\n              />\n              {errors.name && touched.name && (\n                <InputFeedback>{errors.name}</InputFeedback>\n              )}\n\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.email && touched.email && 'error'}\n              />\n              {errors.email && touched.email && (\n                <InputFeedback>{errors.email}</InputFeedback>\n              )}\n\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.password && touched.password && 'error'}\n              />\n              {errors.password && touched.password && (\n                <InputFeedback>{errors.password}</InputFeedback>\n              )}\n\n              <Button type=\"submit\" disabled={isSubmitting}>\n                SignUp\n              </Button>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n      <ChangeForm>\n        Already have account? <ChangeLink to=\"/login\">Login</ChangeLink>\n      </ChangeForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 50px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm'\nimport { Container } from \"./RegisterPage.style\";\n\nconst Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  )\n};\n\nexport default Register;\n"],"names":["Button","styled","theme","fontSizes","m","colors","primary","white","secondary","FormTitle","FormStyled","Form","Label","fontWeights","bold","Input","Field","error","InputFeedback","ChangeForm","m1","ChangeLink","Link","axios","BASE_URL","token","register","user","then","response","data","login","logout","userData","registerUser","createAsyncThunk","API","toast","_","thunkAPI","state","getState","persistedToken","auth","nameRegex","RegExp","mySchema","yup","shape","name","min","matches","required","email","password","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","id","type","placeholder","value","onChange","onBlur","className","disabled","to","Container"],"sourceRoot":""}